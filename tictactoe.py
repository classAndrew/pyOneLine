(lambda q, mat: (lambda m: 1 if (lambda mat: any(sum(x) in {-3, 3} for x in mat) or sum(mat[i][i] for i in range(len(mat))) in {-3, 3} or sum(mat[i][len(mat)-i-1] for i in range(len(mat))) in {-3, 3})(m) else q(q, (lambda k, r, c, t: [x for x in [*[mat[i] for i in range(r)],[*(mat[r][:c]),{'x':1,'o':-1}.get(t),*(mat[r][c+1:])],*[mat[i] for i in range(r+1, len(mat))]] if x])(print('\n'.join(' '.join({1:'x',0:'-',-1:'o'}.get(y) for y in x) for x in mat)), int(input("enter row:")), int(input("enter col:")), input("enter player:"))))(mat))(lambda q, mat: (lambda m: 1 if (lambda mat: any(sum(x) in {-3, 3} for x in mat) or sum(mat[i][i] for i in range(len(mat))) in {-3, 3} or sum(mat[i][len(mat)-i-1] for i in range(len(mat))) in {-3, 3})(m) else q(q, (lambda k, r, c, t: [x for x in [*[mat[i] for i in range(r)],[*(mat[r][:c]),{'x':1,'o':-1}.get(t),*(mat[r][c+1:])],*[mat[i] for i in range(r+1, len(mat))]] if x])(print('\n'.join(' '.join({1:'x',0:'-',-1:'o'}.get(y) for y in x) for x in mat)), int(input("enter row:")), int(input("enter col:")), input("enter player:"))))(mat),[[0,0,0],[0,0,0],[0,0,0]])
